import logging
from typing import Optional

import discord
from discord import app_commands
from discord.ext import commands

# C·∫•u h√¨nh logger
logger = logging.getLogger(__name__)

class Help(commands.Cog):
    """Cog cung c·∫•p c√°c l·ªánh tr·ª£ gi√∫p v√† th√¥ng tin v·ªÅ bot."""

    def __init__(self, bot: commands.Bot) -> None:
        """Kh·ªüi t·∫°o cog Help.

        Args:
            bot: ƒê·ªëi t∆∞·ª£ng bot Discord.
        """
        self.bot = bot

    @commands.command(name="hello")
    async def hello(self, ctx: commands.Context) -> None:
        """Ch√†o h·ªèi v·ªõi bot.

        Args:
            ctx: Ng·ªØ c·∫£nh l·ªánh Discord.
        """
        logger.info(f"{ctx.author} g·ªçi l·ªánh !hello trong k√™nh {ctx.channel}")
        await ctx.send(
            f"Ch√†o {ctx.author.mention}, t√¥i l√† DSB Bot! G√µ `!help` ƒë·ªÉ xem c√°c l·ªánh nh√©! üòÑ"
        )

    @app_commands.command(name="hello", description="Ch√†o h·ªèi v·ªõi bot")
    async def slash_hello(self, interaction: discord.Interaction) -> None:
        """Phi√™n b·∫£n l·ªánh ch√©m c·ªßa Hello."""
        logger.info(f"{interaction.user} g·ªçi l·ªánh /hello trong k√™nh {interaction.channel}")
        await interaction.response.send_message(
            f"Ch√†o {interaction.user.mention}, t√¥i l√† DSB Bot! H√£y d√πng `/help` ƒë·ªÉ xem c√°c l·ªánh nh√©! üòÑ"
        )

    @staticmethod
    def _basic_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh c∆° b·∫£n.

        Returns:
            Embed ch·ª©a th√¥ng tin l·ªánh c∆° b·∫£n.
        """
        embed = discord.Embed(
            title="üìã L·ªánh c∆° b·∫£n",
            description="C√°c l·ªánh c∆° b·∫£n ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi DSB Bot.",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/hello` - Ch√†o h·ªèi v·ªõi bot\n"
                "`/help [danh m·ª•c]` - Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n (g√µ `/help` ƒë·ªÉ xem danh s√°ch danh m·ª•c)"
            ),
            inline=False,
        )
        return embed

    @staticmethod
    def _music_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh nh·∫°c."""
        embed = discord.Embed(
            title="üéµ L·ªánh nh·∫°c",
            description="C√°c l·ªánh ƒë·ªÉ ph√°t v√† qu·∫£n l√Ω nh·∫°c t·ª´ **YouTube** ho·∫∑c **Spotify**.",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/play <URL/t√¨m ki·∫øm>` - Ph√°t nh·∫°c ho·∫∑c th√™m v√†o h√†ng ƒë·ª£i\n"
                "`/queue` - Xem danh s√°ch h√†ng ƒë·ª£i\n"
                "`/nowplaying` - Xem b√†i ƒëang ph√°t\n"
                "`/skip` - B·ªè qua b√†i hi·ªán t·∫°i\n"
                "`/pause` - T·∫°m d·ª´ng nh·∫°c\n"
                "`/resume` - Ti·∫øp t·ª•c ph√°t nh·∫°c\n"
                "`/clear` - X√≥a to√†n b·ªô h√†ng ƒë·ª£i\n"
                "`/remove <s·ªë>` - X√≥a b√†i ·ªü v·ªã tr√≠ c·ª• th·ªÉ\n"
                "`/stop` - D·ª´ng nh·∫°c v√† x√≥a h√†ng ƒë·ª£i\n"
                "`/leave` - Bot r·ªùi voice channel"
            ),
            inline=False,
        )
        embed.add_field(
            name="üí° Ghi ch√∫",
            value=(
                "‚Ä¢ B·∫°n c·∫ßn ·ªü trong **voice channel** ƒë·ªÉ s·ª≠ d·ª•ng c√°c l·ªánh nh·∫°c.\n"
                "‚Ä¢ V·ªõi album/playlist Spotify: bot s·∫Ω ph√°t ngay b√†i ƒë·∫ßu ti√™n, "
                "c√°c b√†i c√≤n l·∫°i ƒë∆∞·ª£c th√™m v√†o h√†ng ƒë·ª£i im l·∫∑ng (kh√¥ng spam chat)."
            ),
            inline=False,
        )
        return embed

    @staticmethod
    def _speak_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh n√≥i (text-to-speech).

        Returns:
            Embed ch·ª©a th√¥ng tin l·ªánh n√≥i.
        """
        embed = discord.Embed(
            title="üì¢ L·ªánh n√≥i (Text-to-Speech)",
            description="C√°c l·ªánh ƒë·ªÉ chuy·ªÉn vƒÉn b·∫£n th√†nh gi·ªçng n√≥i.",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/say <vƒÉn b·∫£n>` - Chuy·ªÉn vƒÉn b·∫£n th√†nh gi·ªçng n√≥i\n"
            ),
            inline=False,
        )
        embed.add_field(
            name="C√°ch s·ª≠ d·ª•ng",
            value=(
                "‚Ä¢ B·∫°n c·∫ßn ·ªü trong **voice channel** ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y.\n"
                "‚Ä¢ Bot s·∫Ω t·ª± ƒë·ªông k·∫øt n·ªëi v√†o voice channel c·ªßa b·∫°n.\n"
                "‚Ä¢ Bot s·∫Ω ph√°t √¢m thanh t∆∞∆°ng ·ª©ng v·ªõi vƒÉn b·∫£n b·∫°n nh·∫≠p.\n"
                "‚Ä¢ Ng√¥n ng·ªØ m·∫∑c ƒë·ªãnh ƒë∆∞·ª£c c·∫•u h√¨nh trong file `.env`.\n"
            ),
            inline=False,
        )
        return embed

    @staticmethod
    def _image_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh t√¨m ki·∫øm ·∫£nh v√† video.

        Returns:
            Embed ch·ª©a th√¥ng tin l·ªánh t√¨m ki·∫øm ·∫£nh v√† video.
        """
        embed = discord.Embed(
            title="üñºÔ∏è L·ªánh t√¨m ki·∫øm ·∫£nh v√† video",
            description="C√°c l·ªánh ƒë·ªÉ t√¨m ki·∫øm ·∫£nh v√† video t·ª´ c√°c ngu·ªìn kh√°c nhau.",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/image <t·ª´ kh√≥a>` ho·∫∑c `/img` - T√¨m ·∫£nh t·ª´ DuckDuckGo\n"
                "`!meme <t·ª´ kh√≥a>` - T√¨m ·∫£nh meme t·ª´ DuckDuckGo\n"
            ),
            inline=False,
        )
        embed.add_field(
            name="üí° Ghi ch√∫",
            value=(
                "‚Ä¢ Bot s·∫Ω t·ª± ƒë·ªông g·ª≠i ·∫£nh ng·∫´u nghi√™n v·ªõi ngu·ªìn t·ª´ `DuckDuckGo`.\n"
            ),
            inline=False,
        )
        return embed

    @staticmethod
    def _ai_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh AI.

        Returns:
            Embed ch·ª©a th√¥ng tin l·ªánh AI.
        """
        embed = discord.Embed(
            title="ü§ñ L·ªánh AI",
            description="C√°c l·ªánh ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi AI (Google Gemini).",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/ai <tin nh·∫Øn>` - Chat v·ªõi AI\n"
                "`/aistatus` - Ki·ªÉm tra tr·∫°ng th√°i AI\n"
                "`/aihelp` - H∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ AI\n"
                "`/aiconfig [setting] [value]` - C·∫•u h√¨nh AI (ch·ªâ admin)"
            ),
            inline=False,
        )
        embed.add_field(
            name="üí° Ghi ch√∫",
            value="G√µ `!aihelp` ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt v·ªÅ t√≠nh nƒÉng AI.",
            inline=False,
        )
        return embed

    @staticmethod
    def _moderation_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh ki·ªÉm duy·ªát.

        Returns:
            Embed ch·ª©a th√¥ng tin l·ªánh ki·ªÉm duy·ªát.
        """
        embed = discord.Embed(
            title="üö® L·ªánh ki·ªÉm duy·ªát",
            description="C√°c l·ªánh ƒë·ªÉ qu·∫£n l√Ω n·ªôi dung v√† t·ª´ c·∫•m tr√™n server.",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/addbadword <t·ª´>` - Th√™m t·ª´ c·∫•m (ch·ªâ admin)\n"
                "`/removebadword <t·ª´>` - X√≥a t·ª´ c·∫•m (ch·ªâ admin)\n"
                "`/listbadwords` - Xem danh s√°ch t·ª´ c·∫•m (ch·ªâ admin)\n"
                "`/modhelp` - Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n ki·ªÉm duy·ªát"
            ),
            inline=False,
        )
        embed.add_field(
            name="üí° Ghi ch√∫",
            value="Bot t·ª± ƒë·ªông ki·ªÉm tra v√† c·∫£nh b√°o khi ph√°t hi·ªán t·ª´ c·∫•m trong tin nh·∫Øn.",
            inline=False,
        )
        return embed

    @staticmethod
    def _admin_help() -> discord.Embed:
        """T·∫°o embed cho danh m·ª•c l·ªánh admin.

        Returns:
            Embed ch·ª©a th√¥ng tin l·ªánh admin.
        """
        embed = discord.Embed(
            title="‚öôÔ∏è L·ªánh admin",
            description="C√°c l·ªánh d√†nh cho qu·∫£n tr·ªã vi√™n server.",
            color=0x00FF88,
        )
        embed.add_field(
            name="L·ªánh",
            value=(
                "`/setwelcome [#channel]` - Thi·∫øt l·∫≠p channel ch√†o m·ª´ng\n"
                "`/testwelcome [@user]` - Ki·ªÉm tra tin nh·∫Øn ch√†o m·ª´ng\n"
                "`/aiconfig [setting] [value]` - C·∫•u h√¨nh AI\n"
                "`/addbadword <t·ª´>` - Th√™m t·ª´ c·∫•m\n"
                "`/removebadword <t·ª´>` - X√≥a t·ª´ c·∫•m\n"
                "`/listbadwords` - Xem danh s√°ch t·ª´ c·∫•m"
            ),
            inline=False,
        )
        embed.add_field(
            name="üí° Ghi ch√∫",
            value="T·∫•t c·∫£ l·ªánh admin y√™u c·∫ßu quy·ªÅn **Administrator**.",
            inline=False,
        )
        return embed

    class HelpView(discord.ui.View):
        """View ch·ª©a c√°c n√∫t t∆∞∆°ng t√°c cho danh m·ª•c tr·ª£ gi√∫p."""

        def __init__(self, cog: "Help") -> None:
            """Kh·ªüi t·∫°o HelpView.

            Args:
                cog: ƒê·ªëi t∆∞·ª£ng cog Help.
            """
            super().__init__(timeout=60)
            self.cog = cog

        async def on_timeout(self) -> None:
            """X·ª≠ l√Ω khi view h·∫øt th·ªùi gian."""
            for item in self.children:
                item.disabled = True
            await self.message.edit(view=self)

        @discord.ui.button(label="C∆° b·∫£n", style=discord.ButtonStyle.secondary, emoji="üìã")
        async def basic_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c c∆° b·∫£n."""
            embed = self.cog._basic_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        @discord.ui.button(label="Nh·∫°c", style=discord.ButtonStyle.secondary, emoji="üéµ")
        async def music_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c nh·∫°c."""
            embed = self.cog._music_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        @discord.ui.button(label="N√≥i", style=discord.ButtonStyle.secondary, emoji="üì¢")
        async def talk_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c n√≥i (text-to-speech)."""
            embed = self.cog._speak_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        @discord.ui.button(label="·∫¢nh", style=discord.ButtonStyle.secondary, emoji="üñºÔ∏è")
        async def image_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c ·∫£nh."""
            embed = self.cog._image_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        @discord.ui.button(label="AI", style=discord.ButtonStyle.secondary, emoji="ü§ñ")
        async def ai_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c AI."""
            embed = self.cog._ai_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        @discord.ui.button(label="Ki·ªÉm duy·ªát", style=discord.ButtonStyle.secondary, emoji="üö®")
        async def moderation_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c ki·ªÉm duy·ªát."""
            embed = self.cog._moderation_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        @discord.ui.button(label="Admin", style=discord.ButtonStyle.secondary, emoji="‚öôÔ∏è")
        async def admin_button(self, interaction: discord.Interaction, button: discord.ui.Button) -> None:
            """X·ª≠ l√Ω n√∫t danh m·ª•c admin."""
            embed = self.cog._admin_help()
            self._set_embed_footer_and_thumbnail(embed)
            await interaction.response.edit_message(embed=embed, view=self)

        def _set_embed_footer_and_thumbnail(self, embed: discord.Embed) -> None:
            """Thi·∫øt l·∫≠p footer v√† thumbnail cho embed.

            Args:
                embed: Embed c·∫ßn thi·∫øt l·∫≠p.
            """
            embed.set_footer(text="DSB Bot - Ph√°t tri·ªÉn b·ªüi VanDung-dev")
            embed.set_thumbnail(
                url=self.cog.bot.user.avatar.url
                if self.cog.bot.user.avatar
                else self.cog.bot.user.default_avatar.url
            )

    @commands.command(name="help", aliases=["commands"])
    async def help_command(self, ctx: commands.Context, category: Optional[str] = None) -> None:
        """Hi·ªÉn th·ªã danh s√°ch l·ªánh h·ªó tr·ª£.

        Args:
            ctx: Ng·ªØ c·∫£nh l·ªánh Discord.
            category: Danh m·ª•c tr·ª£ gi√∫p (basic, music, speak, image, ai, moderation, admin).
        """
        logger.info(f"{ctx.author} g·ªçi l·ªánh !help v·ªõi danh m·ª•c: {category or 'all'} trong k√™nh {ctx.channel}")
        await self._send_help_embed(ctx, category)

    @app_commands.command(name="help", description="Hi·ªÉn th·ªã danh s√°ch l·ªánh h·ªó tr·ª£")
    @app_commands.choices(category=[
        app_commands.Choice(name="C∆° b·∫£n", value="basic"),
        app_commands.Choice(name="Nh·∫°c", value="music"),
        app_commands.Choice(name="N√≥i", value="speak"),
        app_commands.Choice(name="·∫¢nh", value="image"),
        app_commands.Choice(name="AI", value="ai"),
        app_commands.Choice(name="Ki·ªÉm duy·ªát", value="moderation"),
        app_commands.Choice(name="Admin", value="admin")
    ])
    async def slash_help(self, interaction: discord.Interaction, category: Optional[app_commands.Choice[str]] = None) -> None:
        """Phi√™n b·∫£n l·ªánh ch√©m c·ªßa tr·ª£ gi√∫p."""
        category_value = category.value if category else None
        logger.info(f"{interaction.user} g·ªçi l·ªánh /help v·ªõi danh m·ª•c: {category_value or 'all'} trong k√™nh {interaction.channel}")
        await self._send_help_embed(interaction, category_value, is_slash=True)

    async def _send_help_embed(self, target, category: Optional[str] = None, is_slash: bool = False) -> None:
        """G·ª≠i embed tr·ª£ gi√∫p ƒë·∫øn ng∆∞·ªùi d√πng.

        Args:
            target: C√≥ th·ªÉ l√† Context ho·∫∑c Interaction.
            category: Danh m·ª•c tr·ª£ gi√∫p.
            is_slash: X√°c ƒë·ªãnh n·∫øu ƒë√¢y l√† l·ªánh slash.
        """
        help_methods = {
            "basic": self._basic_help,
            "music": self._music_help,
            "speak": self._speak_help,
            "image": self._image_help,
            "ai": self._ai_help,
            "moderation": self._moderation_help,
            "admin": self._admin_help,
        }

        if category:
            category = category.lower()
            if category in help_methods:
                embed = help_methods[category]()
            else:
                embed = discord.Embed(
                    title="‚ùå Danh m·ª•c kh√¥ng h·ª£p l·ªá",
                    description=(
                        f"Danh m·ª•c `{category}` kh√¥ng t·ªìn t·∫°i. "
                        "G√µ `/help` ƒë·ªÉ xem danh s√°ch danh m·ª•c ho·∫∑c th·ª≠: C∆° b·∫£n, Nh·∫°c, N√≥i, ·∫¢nh, AI, Ki·ªÉm duy·ªát, Admin"
                    ),
                    color=0xFF0000,
                )
        else:
            embed = self._basic_help()
            # Ch·ªâ hi·ªÉn th·ªã c√°c n√∫t t∆∞∆°ng t√°c cho c√°c l·ªánh vƒÉn b·∫£n
            if not is_slash:
                view = self.HelpView(self)
                if isinstance(target, commands.Context):
                    message = await target.send(embed=embed, view=view)
                    view.message = message
                    return
                elif isinstance(target, discord.Interaction):
                    await target.response.send_message(embed=embed, view=view)
                    view.message = await target.original_response()
                    return

        embed.set_footer(text="DSB Bot - Ph√°t tri·ªÉn b·ªüi VanDung-dev")
        embed.set_thumbnail(
            url=self.bot.user.avatar.url if self.bot.user.avatar else self.bot.user.default_avatar.url
        )
        
        # G·ª≠i m·ªôt c√°ch th√≠ch h·ª£p d·ª±a tr√™n lo·∫°i m·ª•c ti√™u
        if isinstance(target, commands.Context):
            await target.send(embed=embed)
        elif isinstance(target, discord.Interaction):
            if is_slash and not target.response.is_done():
                await target.response.send_message(embed=embed)
            else:
                await target.followup.send(embed=embed)