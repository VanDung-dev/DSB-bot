import logging
import random

import discord
from discord.ext import commands
from duckduckgo_search import DDGS

# C·∫•u h√¨nh logger
logger = logging.getLogger(__name__)


class ImageSearch(commands.Cog):
    """Cog x·ª≠ l√Ω t√¨m ki·∫øm ·∫£nh t·ª´ DuckDuckGo."""

    def __init__(self, bot: commands.Bot) -> None:
        """Kh·ªüi t·∫°o cog ImageSearch.

        Args:
            bot: ƒê·ªëi t∆∞·ª£ng bot Discord.
        """
        self.bot = bot

    @commands.command(name="image", aliases=["img"])
    async def image_search(self, ctx: commands.Context, *, query: str) -> None:
        """T√¨m ki·∫øm v√† g·ª≠i m·ªôt ·∫£nh t·ª´ DuckDuckGo.

        Args:
            ctx: Ng·ªØ c·∫£nh l·ªánh Discord.
            query: T·ª´ kh√≥a t√¨m ki·∫øm ·∫£nh.
        """
        logger.info(f"üì∏ {ctx.author} g·ªçi l·ªánh !image v·ªõi truy v·∫•n: {query}")
        search_msg = await ctx.send(f"üîç ƒêang t√¨m ·∫£nh cho: **{query}**...")

        try:
            with DDGS() as ddgs:
                results = list(ddgs.images(query, max_results=10))
                if not results:
                    await search_msg.edit(content="‚ùå Kh√¥ng t√¨m th·∫•y ·∫£nh n√†o.")
                    logger.warning(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ·∫£nh cho truy v·∫•n: {query}")
                    return

                result = random.choice(results)
                image_url = result["image"]
                source_url = result.get("source", "")

                embed = discord.Embed(
                    title=f"K·∫øt qu·∫£ cho: {query}",
                    description=f"[Xem ·∫£nh t·∫°i ngu·ªìn]({source_url})" if source_url else "",
                    color=discord.Color.blurple(),
                )
                embed.set_image(url=image_url)
                embed.set_footer(text="Ngu·ªìn: DuckDuckGo Image Search")

                await search_msg.edit(content="", embed=embed)
                logger.info(f"‚úÖ ƒê√£ g·ª≠i ·∫£nh cho truy v·∫•n: {query}")
        except Exception as e:
            await search_msg.edit(content=f"‚ùå L·ªói khi t√¨m ·∫£nh: {str(e)}")
            logger.error(f"‚ùå L·ªói khi t√¨m ·∫£nh: {e}")
